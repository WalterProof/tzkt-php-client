<?php
/**
 * ContractsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Bzzhh\Tzkt
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TzKT API
 *
 * # Introduction  TzKT Explorer provides a free REST-like API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io)) - Edo2net: `https://api.edo2net.tzkt.io/` ([view docs](https://api.edo2net.tzkt.io)) - Florencenet: `https://api.florencenet.tzkt.io/` ([view docs](https://api.florencenet.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io)) - Edo2net staging: `https://staging.api.edo2net.tzkt.io/` ([view docs](https://staging.api.edo2net.tzkt.io))      Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Email: hello@baking-bad.org - Twitter: https://twitter.com/TezosBakingBad - Telegram: [tg://resolve?domain=baking_bad_chat](tg://resolve?domain=baking_bad_chat) - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you should mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  ---
 *
 * The version of the OpenAPI document: v1.5
 * Contact: hello@baking-bad.org
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Bzzhh\Tzkt\Test\Api;

use \Bzzhh\Tzkt\Configuration;
use \Bzzhh\Tzkt\ApiException;
use \Bzzhh\Tzkt\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ContractsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Bzzhh\Tzkt
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ContractsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for contractsBuildEntrypointParameters
     *
     * Build entrypoint parameters.
     *
     */
    public function testContractsBuildEntrypointParameters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsBuildEntrypointParameters2
     *
     * Build entrypoint parameters.
     *
     */
    public function testContractsBuildEntrypointParameters2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGet
     *
     * Get contracts.
     *
     */
    public function testContractsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetBigMapByName
     *
     * Get bigmap by name.
     *
     */
    public function testContractsGetBigMapByName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetBigMapByNameKeys
     *
     * Get bigmap keys.
     *
     */
    public function testContractsGetBigMapByNameKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetBigMaps
     *
     * Get contract bigmaps.
     *
     */
    public function testContractsGetBigMaps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetByAddress
     *
     * Get contract by address.
     *
     */
    public function testContractsGetByAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetCode
     *
     * Get contract code.
     *
     */
    public function testContractsGetCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetCount
     *
     * Get contracts count.
     *
     */
    public function testContractsGetCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetEntrypointByName
     *
     * Get entrypoint by name.
     *
     */
    public function testContractsGetEntrypointByName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetEntrypoints
     *
     * Get contract entrypoints.
     *
     */
    public function testContractsGetEntrypoints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetHistoricalKeys
     *
     * Get historical keys.
     *
     */
    public function testContractsGetHistoricalKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetInterface
     *
     * Get JSON Schema [2020-12] interface for the contract.
     *
     */
    public function testContractsGetInterface()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetKey
     *
     * Get bigmap key.
     *
     */
    public function testContractsGetKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetKey2
     *
     * Get historical key.
     *
     */
    public function testContractsGetKey2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetKeyUpdates
     *
     * Get bigmap key updates.
     *
     */
    public function testContractsGetKeyUpdates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetRawStorage
     *
     * Get raw contract storage.
     *
     */
    public function testContractsGetRawStorage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetRawStorageHistory
     *
     * Get raw contract storage history.
     *
     */
    public function testContractsGetRawStorageHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetRawStorageSchema
     *
     * Get raw contract storage schema.
     *
     */
    public function testContractsGetRawStorageSchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetStorage
     *
     * Get contract storage.
     *
     */
    public function testContractsGetStorage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetStorageHistory
     *
     * Get contract storage history.
     *
     */
    public function testContractsGetStorageHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for contractsGetStorageSchema
     *
     * Get contract storage schema.
     *
     */
    public function testContractsGetStorageSchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
