<?php
/**
 * OperationsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Bzzhh\Tzkt
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TzKT API
 *
 * # Introduction  TzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io))  - Ghostnet: `https://api.ghostnet.tzkt.io/` ([view docs](https://api.ghostnet.tzkt.io)) - Kathmandunet: `https://api.kathmandunet.tzkt.io/` ([view docs](https://api.kathmandunet.tzkt.io)) - Limanet: `https://api.limanet.tzkt.io/` ([view docs](https://api.limanet.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))  Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Discord: https://discord.gg/aG8XKuwsQd - Telegram: https://t.me/baking_bad_chat - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L - Twitter: https://twitter.com/TezosBakingBad - Email: hello@baking-bad.org  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you must mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** or **\"Built with TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  ---
 *
 * The version of the OpenAPI document: v1.11.0
 * Contact: hello@baking-bad.org
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Bzzhh\Tzkt\Test\Api;

use \Bzzhh\Tzkt\Configuration;
use \Bzzhh\Tzkt\ApiException;
use \Bzzhh\Tzkt\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OperationsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Bzzhh\Tzkt
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OperationsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for operationsGetActivationByHash
     *
     * Get activation by hash.
     *
     */
    public function testOperationsGetActivationByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetActivations
     *
     * Get activations.
     *
     */
    public function testOperationsGetActivations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetActivationsCount
     *
     * Get activations count.
     *
     */
    public function testOperationsGetActivationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBaking
     *
     * Get baking.
     *
     */
    public function testOperationsGetBaking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBakingById
     *
     * Get baking by id.
     *
     */
    public function testOperationsGetBakingById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBakingCount
     *
     * Get baking count.
     *
     */
    public function testOperationsGetBakingCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBallotByHash
     *
     * Get ballot by hash.
     *
     */
    public function testOperationsGetBallotByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBallots
     *
     * Get ballots.
     *
     */
    public function testOperationsGetBallots()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetBallotsCount
     *
     * Get ballots count.
     *
     */
    public function testOperationsGetBallotsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetByHash
     *
     * Get operations by hash.
     *
     */
    public function testOperationsGetByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetByHashCounter
     *
     * Get operations by hash and counter.
     *
     */
    public function testOperationsGetByHashCounter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetByHashCounterNonce
     *
     * Get operations by hash, counter and nonce.
     *
     */
    public function testOperationsGetByHashCounterNonce()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDelegationByHash
     *
     * Get delegation by hash.
     *
     */
    public function testOperationsGetDelegationByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDelegationStatus
     *
     * Get delegation status.
     *
     */
    public function testOperationsGetDelegationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDelegations
     *
     * Get delegations.
     *
     */
    public function testOperationsGetDelegations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDelegationsCount
     *
     * Get delegations count.
     *
     */
    public function testOperationsGetDelegationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleBaking
     *
     * Get double baking.
     *
     */
    public function testOperationsGetDoubleBaking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleBakingByHash
     *
     * Get double baking by hash.
     *
     */
    public function testOperationsGetDoubleBakingByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleBakingCount
     *
     * Get double baking count.
     *
     */
    public function testOperationsGetDoubleBakingCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleEndorsing
     *
     * Get double endorsing.
     *
     */
    public function testOperationsGetDoubleEndorsing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleEndorsingByHash
     *
     * Get double endorsing by hash.
     *
     */
    public function testOperationsGetDoubleEndorsingByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoubleEndorsingCount
     *
     * Get double endorsing count.
     *
     */
    public function testOperationsGetDoubleEndorsingCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoublePreendorsing
     *
     * Get double preendorsing.
     *
     */
    public function testOperationsGetDoublePreendorsing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoublePreendorsingByHash
     *
     * Get double preendorsing by hash.
     *
     */
    public function testOperationsGetDoublePreendorsingByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDoublePreendorsingCount
     *
     * Get double preendorsing count.
     *
     */
    public function testOperationsGetDoublePreendorsingCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDrainDelegateByHash
     *
     * Get drain delegate by hash.
     *
     */
    public function testOperationsGetDrainDelegateByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDrainDelegateOps
     *
     * Get drain delegate.
     *
     */
    public function testOperationsGetDrainDelegateOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetDrainDelegateOpsCount
     *
     * Get drain delegate count.
     *
     */
    public function testOperationsGetDrainDelegateOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsementByHash
     *
     * Get endorsement by hash.
     *
     */
    public function testOperationsGetEndorsementByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsements
     *
     * Get endorsements.
     *
     */
    public function testOperationsGetEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsementsCount
     *
     * Get endorsements count.
     *
     */
    public function testOperationsGetEndorsementsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsingRewardById
     *
     * Get endorsing reward by id.
     *
     */
    public function testOperationsGetEndorsingRewardById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsingRewards
     *
     * Get endorsing rewards.
     *
     */
    public function testOperationsGetEndorsingRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetEndorsingRewardsCount
     *
     * Get endorsing rewards count.
     *
     */
    public function testOperationsGetEndorsingRewardsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetIncreasePaidStorageByHash
     *
     * Get increase paid storage by hash.
     *
     */
    public function testOperationsGetIncreasePaidStorageByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetIncreasePaidStorageCount
     *
     * Get increase paid storage count.
     *
     */
    public function testOperationsGetIncreasePaidStorageCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetIncreasePaidStorageOps
     *
     * Get increase paid storage.
     *
     */
    public function testOperationsGetIncreasePaidStorageOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetMigrationById
     *
     * Get migration by id.
     *
     */
    public function testOperationsGetMigrationById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetMigrations
     *
     * Get migrations.
     *
     */
    public function testOperationsGetMigrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetMigrationsCount
     *
     * Get migrations count.
     *
     */
    public function testOperationsGetMigrationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetNonceRevelationByHash
     *
     * Get nonce revelation by hash.
     *
     */
    public function testOperationsGetNonceRevelationByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetNonceRevelations
     *
     * Get nonce revelations.
     *
     */
    public function testOperationsGetNonceRevelations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetNonceRevelationsCount
     *
     * Get nonce revelations count.
     *
     */
    public function testOperationsGetNonceRevelationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetOriginationByHash
     *
     * Get origination by hash.
     *
     */
    public function testOperationsGetOriginationByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetOriginationStatus
     *
     * Get origination status.
     *
     */
    public function testOperationsGetOriginationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetOriginations
     *
     * Get originations.
     *
     */
    public function testOperationsGetOriginations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetOriginationsCount
     *
     * Get originations count.
     *
     */
    public function testOperationsGetOriginationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetPreendorsementByHash
     *
     * Get preendorsement by hash.
     *
     */
    public function testOperationsGetPreendorsementByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetPreendorsements
     *
     * Get preendorsements.
     *
     */
    public function testOperationsGetPreendorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetPreendorsementsCount
     *
     * Get preendorsements count.
     *
     */
    public function testOperationsGetPreendorsementsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetProposalByHash
     *
     * Get proposal by hash.
     *
     */
    public function testOperationsGetProposalByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetProposals
     *
     * Get proposals.
     *
     */
    public function testOperationsGetProposals()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetProposalsCount
     *
     * Get proposals count.
     *
     */
    public function testOperationsGetProposalsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRegisterConstantByHash
     *
     * Get register constant by hash.
     *
     */
    public function testOperationsGetRegisterConstantByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRegisterConstantStatus
     *
     * Get register constant status.
     *
     */
    public function testOperationsGetRegisterConstantStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRegisterConstants
     *
     * Get register constants.
     *
     */
    public function testOperationsGetRegisterConstants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRegisterConstantsCount
     *
     * Get register constants count.
     *
     */
    public function testOperationsGetRegisterConstantsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevealByHash
     *
     * Get reveal by hash.
     *
     */
    public function testOperationsGetRevealByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevealStatus
     *
     * Get reveal status.
     *
     */
    public function testOperationsGetRevealStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetReveals
     *
     * Get reveals.
     *
     */
    public function testOperationsGetReveals()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevealsCount
     *
     * Get reveals count.
     *
     */
    public function testOperationsGetRevealsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevelationPenalties
     *
     * Get revelation penalties.
     *
     */
    public function testOperationsGetRevelationPenalties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevelationPenaltiesCount
     *
     * Get revelation penalties count.
     *
     */
    public function testOperationsGetRevelationPenaltiesCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetRevelationPenaltyById
     *
     * Get revelation penalty by id.
     *
     */
    public function testOperationsGetRevelationPenaltyById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetSetDepositsLimitByHash
     *
     * Get set deposits limit by hash.
     *
     */
    public function testOperationsGetSetDepositsLimitByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetSetDepositsLimitStatus
     *
     * Get set deposits limit status.
     *
     */
    public function testOperationsGetSetDepositsLimitStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetSetDepositsLimits
     *
     * Get set deposits limits.
     *
     */
    public function testOperationsGetSetDepositsLimits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetSetDepositsLimitsCount
     *
     * Get set deposits limits count.
     *
     */
    public function testOperationsGetSetDepositsLimitsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetStatus
     *
     * Get operation status.
     *
     */
    public function testOperationsGetStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactionByHash
     *
     * Get transaction by hash.
     *
     */
    public function testOperationsGetTransactionByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactionByHashCounter
     *
     * Get transaction by hash and counter.
     *
     */
    public function testOperationsGetTransactionByHashCounter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactionByHashCounterNonce
     *
     * Get transaction by hash, counter and nonce.
     *
     */
    public function testOperationsGetTransactionByHashCounterNonce()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactionStatus
     *
     * Get transaction status.
     *
     */
    public function testOperationsGetTransactionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactions
     *
     * Get transactions.
     *
     */
    public function testOperationsGetTransactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransactionsCount
     *
     * Get transactions count.
     *
     */
    public function testOperationsGetTransactionsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransferTicketOps
     *
     * Get transfer ticket.
     *
     */
    public function testOperationsGetTransferTicketOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransferTicketOpsByHash
     *
     * Get transfer ticket by hash.
     *
     */
    public function testOperationsGetTransferTicketOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransferTicketOpsCount
     *
     * Get transfer ticket count.
     *
     */
    public function testOperationsGetTransferTicketOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTransferTicketStatus
     *
     * Get transfer ticket status.
     *
     */
    public function testOperationsGetTransferTicketStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupCommitOps
     *
     * Get tx rollup commit.
     *
     */
    public function testOperationsGetTxRollupCommitOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupCommitOpsByHash
     *
     * Get tx rollup commit by hash.
     *
     */
    public function testOperationsGetTxRollupCommitOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupCommitOpsCount
     *
     * Get tx rollup commit count.
     *
     */
    public function testOperationsGetTxRollupCommitOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupCommitStatus
     *
     * Get tx rollup commit status.
     *
     */
    public function testOperationsGetTxRollupCommitStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupDispatchTicketsOps
     *
     * Get tx rollup dispatch tickets.
     *
     */
    public function testOperationsGetTxRollupDispatchTicketsOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupDispatchTicketsOpsByHash
     *
     * Get tx rollup dispatch tickets by hash.
     *
     */
    public function testOperationsGetTxRollupDispatchTicketsOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupDispatchTicketsOpsCount
     *
     * Get tx rollup dispatch tickets count.
     *
     */
    public function testOperationsGetTxRollupDispatchTicketsOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupDispatchTicketsStatus
     *
     * Get tx rollup dispatch tickets status.
     *
     */
    public function testOperationsGetTxRollupDispatchTicketsStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupFinalizeCommitmentOps
     *
     * Get tx rollup finalize commitment.
     *
     */
    public function testOperationsGetTxRollupFinalizeCommitmentOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupFinalizeCommitmentOpsByHash
     *
     * Get tx rollup finalize commitment by hash.
     *
     */
    public function testOperationsGetTxRollupFinalizeCommitmentOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupFinalizeCommitmentOpsCount
     *
     * Get tx rollup finalize commitment count.
     *
     */
    public function testOperationsGetTxRollupFinalizeCommitmentOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupFinalizeCommitmentStatus
     *
     * Get tx rollup finalize commitment status.
     *
     */
    public function testOperationsGetTxRollupFinalizeCommitmentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupOriginationOps
     *
     * Get tx rollup origination.
     *
     */
    public function testOperationsGetTxRollupOriginationOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupOriginationOpsByHash
     *
     * Get tx rollup origination by hash.
     *
     */
    public function testOperationsGetTxRollupOriginationOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupOriginationOpsCount
     *
     * Get tx rollup origination count.
     *
     */
    public function testOperationsGetTxRollupOriginationOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupOriginationStatus
     *
     * Get tx rollup origination status.
     *
     */
    public function testOperationsGetTxRollupOriginationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRejectionOps
     *
     * Get tx rollup rejection.
     *
     */
    public function testOperationsGetTxRollupRejectionOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRejectionOpsByHash
     *
     * Get tx rollup rejection by hash.
     *
     */
    public function testOperationsGetTxRollupRejectionOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRejectionOpsCount
     *
     * Get tx rollup rejection count.
     *
     */
    public function testOperationsGetTxRollupRejectionOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRejectionStatus
     *
     * Get tx rollup rejection status.
     *
     */
    public function testOperationsGetTxRollupRejectionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRemoveCommitmentOps
     *
     * Get tx rollup remove commitment.
     *
     */
    public function testOperationsGetTxRollupRemoveCommitmentOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRemoveCommitmentOpsByHash
     *
     * Get tx rollup remove commitment by hash.
     *
     */
    public function testOperationsGetTxRollupRemoveCommitmentOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRemoveCommitmentOpsCount
     *
     * Get tx rollup remove commitment count.
     *
     */
    public function testOperationsGetTxRollupRemoveCommitmentOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupRemoveCommitmentStatus
     *
     * Get tx rollup remove commitment status.
     *
     */
    public function testOperationsGetTxRollupRemoveCommitmentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupReturnBondOps
     *
     * Get tx rollup return bond.
     *
     */
    public function testOperationsGetTxRollupReturnBondOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupReturnBondOpsByHash
     *
     * Get tx rollup return bond by hash.
     *
     */
    public function testOperationsGetTxRollupReturnBondOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupReturnBondOpsCount
     *
     * Get tx rollup return bond count.
     *
     */
    public function testOperationsGetTxRollupReturnBondOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupReturnBondStatus
     *
     * Get tx rollup return bond status.
     *
     */
    public function testOperationsGetTxRollupReturnBondStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupSubmitBatchOps
     *
     * Get tx rollup submit batch.
     *
     */
    public function testOperationsGetTxRollupSubmitBatchOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupSubmitBatchOpsByHash
     *
     * Get tx rollup submit batch by hash.
     *
     */
    public function testOperationsGetTxRollupSubmitBatchOpsByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupSubmitBatchOpsCount
     *
     * Get tx rollup submit batch count.
     *
     */
    public function testOperationsGetTxRollupSubmitBatchOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetTxRollupSubmitBatchStatus
     *
     * Get tx rollup submit batch status.
     *
     */
    public function testOperationsGetTxRollupSubmitBatchStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetUpdateConsensusKeyByHash
     *
     * Get update consensus key by hash.
     *
     */
    public function testOperationsGetUpdateConsensusKeyByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetUpdateConsensusKeyOps
     *
     * Get update consensus key.
     *
     */
    public function testOperationsGetUpdateConsensusKeyOps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetUpdateConsensusKeyOpsCount
     *
     * Get update consensus key count.
     *
     */
    public function testOperationsGetUpdateConsensusKeyOpsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetVdfRevelationByHash
     *
     * Get vdf revelation by hash.
     *
     */
    public function testOperationsGetVdfRevelationByHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetVdfRevelations
     *
     * Get vdf revelations.
     *
     */
    public function testOperationsGetVdfRevelations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for operationsGetVdfRevelationsCount
     *
     * Get vdf revelations count.
     *
     */
    public function testOperationsGetVdfRevelationsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
