<?php
/**
 * BakerRewardsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Bzzhh\Tzkt
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TzKT API
 *
 * # Introduction  TzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos. TzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.  TzKT API is available for the following Tezos networks with the following base URLs:  - Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io))  - Ghostnet: `https://api.ghostnet.tzkt.io/` ([view docs](https://api.ghostnet.tzkt.io)) - Kathmandunet: `https://api.kathmandunet.tzkt.io/` ([view docs](https://api.kathmandunet.tzkt.io)) - Limanet: `https://api.limanet.tzkt.io/` ([view docs](https://api.limanet.tzkt.io))  We also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:  - Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))  Feel free to contact us if you have any questions or feature requests. Your feedback really helps us make TzKT better!  - Discord: https://discord.gg/aG8XKuwsQd - Telegram: https://t.me/baking_bad_chat - Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L - Twitter: https://twitter.com/TezosBakingBad - Email: hello@baking-bad.org  And don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)  # Terms of Use  TzKT API is free for everyone and for both commercial and non-commercial usage.  If your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend, you must mention that fact on your website or application by placing the label **\"Powered by TzKT API\"** or **\"Built with TzKT API\"** with a direct link to [tzkt.io](https://tzkt.io).   # Rate Limits  There will be no rate limits as long as our servers can handle the load without additional infrastructure costs. However, any apparent abuse will be prevented by setting targeted rate limits.  Check out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/) and in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).  ---
 *
 * The version of the OpenAPI document: v1.11.0
 * Contact: hello@baking-bad.org
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Bzzhh\Tzkt\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * BakerRewardsTest Class Doc Comment
 *
 * @category    Class
 * @description BakerRewards
 * @package     Bzzhh\Tzkt
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class BakerRewardsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BakerRewards"
     */
    public function testBakerRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cycle"
     */
    public function testPropertyCycle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "staking_balance"
     */
    public function testPropertyStakingBalance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_stake"
     */
    public function testPropertyActiveStake()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "selected_stake"
     */
    public function testPropertySelectedStake()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delegated_balance"
     */
    public function testPropertyDelegatedBalance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "num_delegators"
     */
    public function testPropertyNumDelegators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expected_blocks"
     */
    public function testPropertyExpectedBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expected_endorsements"
     */
    public function testPropertyExpectedEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_blocks"
     */
    public function testPropertyFutureBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_block_rewards"
     */
    public function testPropertyFutureBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blocks"
     */
    public function testPropertyBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "block_rewards"
     */
    public function testPropertyBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_blocks"
     */
    public function testPropertyMissedBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_block_rewards"
     */
    public function testPropertyMissedBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_endorsements"
     */
    public function testPropertyFutureEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_endorsement_rewards"
     */
    public function testPropertyFutureEndorsementRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsements"
     */
    public function testPropertyEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsement_rewards"
     */
    public function testPropertyEndorsementRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_endorsements"
     */
    public function testPropertyMissedEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_endorsement_rewards"
     */
    public function testPropertyMissedEndorsementRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "block_fees"
     */
    public function testPropertyBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_block_fees"
     */
    public function testPropertyMissedBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_baking_rewards"
     */
    public function testPropertyDoubleBakingRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_baking_losses"
     */
    public function testPropertyDoubleBakingLosses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_endorsing_rewards"
     */
    public function testPropertyDoubleEndorsingRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_endorsing_losses"
     */
    public function testPropertyDoubleEndorsingLosses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_preendorsing_rewards"
     */
    public function testPropertyDoublePreendorsingRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_preendorsing_losses"
     */
    public function testPropertyDoublePreendorsingLosses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revelation_rewards"
     */
    public function testPropertyRevelationRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revelation_losses"
     */
    public function testPropertyRevelationLosses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quote"
     */
    public function testPropertyQuote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "own_blocks"
     */
    public function testPropertyOwnBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extra_blocks"
     */
    public function testPropertyExtraBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_own_blocks"
     */
    public function testPropertyMissedOwnBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_extra_blocks"
     */
    public function testPropertyMissedExtraBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_own_blocks"
     */
    public function testPropertyUncoveredOwnBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_extra_blocks"
     */
    public function testPropertyUncoveredExtraBlocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_endorsements"
     */
    public function testPropertyUncoveredEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "own_block_rewards"
     */
    public function testPropertyOwnBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extra_block_rewards"
     */
    public function testPropertyExtraBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_own_block_rewards"
     */
    public function testPropertyMissedOwnBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_extra_block_rewards"
     */
    public function testPropertyMissedExtraBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_own_block_rewards"
     */
    public function testPropertyUncoveredOwnBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_extra_block_rewards"
     */
    public function testPropertyUncoveredExtraBlockRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_endorsement_rewards"
     */
    public function testPropertyUncoveredEndorsementRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "own_block_fees"
     */
    public function testPropertyOwnBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extra_block_fees"
     */
    public function testPropertyExtraBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_own_block_fees"
     */
    public function testPropertyMissedOwnBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_extra_block_fees"
     */
    public function testPropertyMissedExtraBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_own_block_fees"
     */
    public function testPropertyUncoveredOwnBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncovered_extra_block_fees"
     */
    public function testPropertyUncoveredExtraBlockFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_baking_lost_deposits"
     */
    public function testPropertyDoubleBakingLostDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_baking_lost_rewards"
     */
    public function testPropertyDoubleBakingLostRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_baking_lost_fees"
     */
    public function testPropertyDoubleBakingLostFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_endorsing_lost_deposits"
     */
    public function testPropertyDoubleEndorsingLostDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_endorsing_lost_rewards"
     */
    public function testPropertyDoubleEndorsingLostRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "double_endorsing_lost_fees"
     */
    public function testPropertyDoubleEndorsingLostFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revelation_lost_rewards"
     */
    public function testPropertyRevelationLostRewards()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "revelation_lost_fees"
     */
    public function testPropertyRevelationLostFees()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_block_deposits"
     */
    public function testPropertyFutureBlockDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "block_deposits"
     */
    public function testPropertyBlockDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_endorsement_deposits"
     */
    public function testPropertyFutureEndorsementDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsement_deposits"
     */
    public function testPropertyEndorsementDeposits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
